@using Web.ViewModels.Basket
@model BasketIndexVM
@{
    var returnUrl = Context.Request.Query["returnUrl"];
    ViewBag.Title = "Shopping Cart";
}

@await Component.InvokeAsync("IntroBanner")


<section class="shopping-cart">
    <div class="col-lg-12 p-5 bg-white rounded mb-5">
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col" class="border-bottom">
                            <div class="py-2 table-heading">Product</div>
                        </th>
                        <th scope="col" class="border-bottom">
                            <div class="py-2 table-heading">Price</div>
                        </th>
                        <th scope="col" class="border-bottom">
                            <div class="py-2 table-heading">Quantity</div>
                        </th>
                        <th scope="col" class="border-bottom">
                            <div class="py-2 table-heading">Total</div>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.BasketProducts.Count > 0)
                    {
                        @foreach (var product in Model.BasketProducts)
                        {
                            var total = product.Price * product.Quantity;

                            <tr class="border basket-products" id="@product.Id">
                                <td scope="row">
                                    <div class="p-2">
                                        <img src="~/assets/images/@product.Photoname" width="100" class="img-fluid rounded shadow-sm">
                                        <div class="ms-3 d-inline-block align-middle">
                                            <h5 class="mb-0">
                                                <a asp-action="singleproduct" asp-controller="shop" asp-route-id="@product.Id" class="d-inline-block align-middle product-title">
                                                    @product.Title
                                                </a>
                                            </h5>
                                        </div>
                                    </div>
                                </td>
                                <td class="border-0 align-middle">$@product.Price</td>
                                <td class="border-0 align-middle cart-quantity">
                                    <div class="quantity-field">
                                        <button class="value-button decrease bg-transparent" data-id="@product.Id" data-quantity="@product.Quantity" data-price="@product.Price" onclick="decreaseValue(this)">
                                            <i class="fa-solid fa-minus"></i>
                                        </button>
                                        <div class="number product-quantity-@product.Id" >@product.Quantity</div>
                                        <button class="value-button increase bg-transparent" data-id="@product.Id" data-quantity="@product.Quantity" data-price="@product.Price" onclick="increaseValue(this)">
                                            <i class="fa-solid fa-plus"></i>
                                        </button>
                                    </div>
                                </td>
                                <td class="border-0 align-middle total-product-price-@product.Id">$@total</td>
                                <td class="border-0 align-middle">
                                    <div data-price="@product.Price" data-id="@product.Id" data-quantity="@product.Quantity" class="text-dark basket-delete">
                                        <i class="fa fa-trash"></i>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
    <!-- </div> -->
    <!-- </div> -->
</section>

@await Component.InvokeAsync("Feature");