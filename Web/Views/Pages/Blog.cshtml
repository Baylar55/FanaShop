@using Web.ViewModels.Pages
@model PagesIndexVM

<section class="blog-section">
    <div class="row">

        @foreach (var blog in Model.Blogs)
        {
            <div class="blog-element col-lg-4 col-md-6 ">
                <div class="bp-mini bp-mini-img">
                    <div class="bp-mini-thumbnail">
                        <a >
                            <img src="~/assets/images/@blog.CoverPhoto" alt="">
                        </a>
                    </div>
                    <div class="bp-mini-content">
                        <div class="bp-mini-category">
                            Category : @blog.Category.Title
                        </div>
                        <h4>
                            <a asp-controller="pages" asp-action="singleblog" asp-route-id="@blog.Id">How to choose the right customer for your photo?</a>
                        </h4>
                        <div class="bp-mini-stat">
                            <span class="bp-mini-stat-wrap">
                                <span class="bp-mini-author"><i class="fa-regular fa-circle-user"></i>By @blog.Author</span>
                            </span>
                            <span class="bp-mini-stat-wrap">
                                <span class="bp-mini-publish-date">
                                    <span><i class="fa-regular fa-clock"></i>@blog.CreatedAt</span>
                                </span>
                            </span>
                        </div>
                        <p class="bp-mini-p">
                           @Html.Raw(@String.Join(" ",@blog.Description.Split(' ').Take(15)))  .........
                        </p>
                    </div>
                </div>
                <button><a asp-action="singleblog" asp-route-id="@blog.Id" asp-controller="pages">Read More</a></button>
            </div>
        }
    </div>
    <div class="pagination d-flex justify-content-center">
        @if (Model.Page > 1)
        {
            var prevPage = Model.Page - 1;
            <a class="pagination-element" asp-action="blog" asp-controller="pages" asp-route-page="@prevPage"><i class="fa-solid fa-left-long"></i></a>
        }
        @for (int i = 1; i <= Model.PageCount; i++)
        {
            <a asp-action="blog" asp-controller="pages" asp-route-page="@i" class="@(Model.Page==i ? "pagination-element pagination-active disabled" : "pagination-element")">@i</a>
        }
        @if (Model.PageCount != Model.Page)
        {
            var nextPage = @Model.Page + 1;
            <a class="pagination-element" asp-action="blog" asp-controller="blog" asp-route-page="@nextPage"><i class="fa-solid fa-right-long"></i></a>
        }
    </div>
</section>

@await Component.InvokeAsync("Feature");